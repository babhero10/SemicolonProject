
Timer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000da  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000012e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000012e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000160  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  0000019c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006a3  00000000  00000000  000001fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005b6  00000000  00000000  0000089f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000031b  00000000  00000000  00000e55  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b0  00000000  00000000  00001170  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000033e  00000000  00000000  00001220  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000119  00000000  00000000  0000155e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  00001677  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__vector_10>
  2c:	0c 94 3d 00 	jmp	0x7a	; 0x7a <__vector_11>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include <avr/io.h>
#include "./Timer.h"

int main(void)
{
	DDRB |= 1 << PB3;
  6c:	87 b3       	in	r24, 0x17	; 23
  6e:	88 60       	ori	r24, 0x08	; 8
  70:	87 bb       	out	0x17, r24	; 23
    TIMER0_CTC_INIT(210);
  72:	82 ed       	ldi	r24, 0xD2	; 210
  74:	0e 94 64 00 	call	0xc8	; 0xc8 <TIMER0_CTC_INIT>
  78:	ff cf       	rjmp	.-2      	; 0x78 <main+0xc>

0000007a <__vector_11>:
void delay_interrupt_normal_mode(uint8_t val)
{
	TCNT0 = val;
	TCCR0 = 0x05;
	TIMSK |= 1 << TOIE0;
	sei();
  7a:	1f 92       	push	r1
  7c:	0f 92       	push	r0
  7e:	0f b6       	in	r0, 0x3f	; 63
  80:	0f 92       	push	r0
  82:	11 24       	eor	r1, r1
  84:	8f 93       	push	r24
  86:	9f 93       	push	r25
  88:	98 b3       	in	r25, 0x18	; 24
  8a:	88 e0       	ldi	r24, 0x08	; 8
  8c:	89 27       	eor	r24, r25
  8e:	88 bb       	out	0x18, r24	; 24
  90:	88 b7       	in	r24, 0x38	; 56
  92:	81 60       	ori	r24, 0x01	; 1
  94:	88 bf       	out	0x38, r24	; 56
  96:	9f 91       	pop	r25
  98:	8f 91       	pop	r24
  9a:	0f 90       	pop	r0
  9c:	0f be       	out	0x3f, r0	; 63
  9e:	0f 90       	pop	r0
  a0:	1f 90       	pop	r1
  a2:	18 95       	reti

000000a4 <__vector_10>:
  a4:	1f 92       	push	r1
  a6:	0f 92       	push	r0
  a8:	0f b6       	in	r0, 0x3f	; 63
  aa:	0f 92       	push	r0
  ac:	11 24       	eor	r1, r1
  ae:	8f 93       	push	r24
  b0:	9f 93       	push	r25
  b2:	98 b3       	in	r25, 0x18	; 24
  b4:	88 e0       	ldi	r24, 0x08	; 8
  b6:	89 27       	eor	r24, r25
  b8:	88 bb       	out	0x18, r24	; 24
  ba:	9f 91       	pop	r25
  bc:	8f 91       	pop	r24
  be:	0f 90       	pop	r0
  c0:	0f be       	out	0x3f, r0	; 63
  c2:	0f 90       	pop	r0
  c4:	1f 90       	pop	r1
  c6:	18 95       	reti

000000c8 <TIMER0_CTC_INIT>:
}

void TIMER0_CTC_INIT(uint8_t val)
{
	TCCR0 = 0x1D;
  c8:	9d e1       	ldi	r25, 0x1D	; 29
  ca:	93 bf       	out	0x33, r25	; 51
	OCR0 = val;
  cc:	8c bf       	out	0x3c, r24	; 60
	TIMSK = 1 << OCIE0;
  ce:	82 e0       	ldi	r24, 0x02	; 2
  d0:	89 bf       	out	0x39, r24	; 57
	sei();
  d2:	78 94       	sei
  d4:	08 95       	ret

000000d6 <_exit>:
  d6:	f8 94       	cli

000000d8 <__stop_program>:
  d8:	ff cf       	rjmp	.-2      	; 0xd8 <__stop_program>
